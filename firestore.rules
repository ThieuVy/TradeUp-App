rules_version = '2';

service cloud.firestore {
    match /databases/{database}/documents {

        // =====================================================================
        // 1. HÀM HỖ TRỢ
        // =====================================================================
        function isAuthenticated() {
            return request.auth != null;
        }
        function isOwner(userId) {
            return isAuthenticated() && request.auth.uid == userId;
        }
        function isAdmin() {
            return isAuthenticated() && request.auth.token.admin == true;
        }

        // =====================================================================
        // 2. QUY TẮC CHO TỪNG BỘ SƯU TẬP
        // =====================================================================

        // --- Người dùng (users) ---
        match /users/{userId} {
            // GIẢI THÍCH: Quy tắc này cho phép bất kỳ ai đã đăng nhập đọc hồ sơ của người khác.
            // Điều này là chấp nhận được nếu hồ sơ người dùng chỉ chứa thông tin công khai.
            // Nếu bạn có dữ liệu nhạy cảm (email, sđt), hãy xem xét tạo một sub-collection riêng
            // với các quy tắc chặt chẽ hơn.
            allow read: if isAuthenticated();

            // Chỉ chủ sở hữu hoặc admin mới có thể ghi/cập nhật
            allow write: if isOwner(userId) || isAdmin();
        }

        // --- Tin đăng (listings) ---
        match /listings/{listingId} {

            // Bất kỳ người dùng đã đăng nhập nào cũng có thể đọc một tin đăng cụ thể.
            allow get: if isAuthenticated();

            // Bất kỳ người dùng đã đăng nhập nào cũng có thể truy vấn danh sách tin đăng,
            // nhưng giới hạn số lượng để tránh quét toàn bộ dữ liệu.
            allow list: if isAuthenticated() && request.query.limit <= 50;

            // CHỈ người dùng đã đăng nhập mới có thể TẠO tin đăng, và họ phải là người bán.
            // Ngăn chặn việc giả mạo người bán.
            allow create: if isAuthenticated() && request.auth.uid == request.resource.data.sellerId;

            // CHỈ chủ sở hữu của tin đăng (dựa trên sellerId trong document) hoặc admin
            // mới có quyền CẬP NHẬT tin đăng đó.
            allow update: if isAuthenticated() && (request.auth.uid == resource.data.sellerId || isAdmin());

            // CHỈ chủ sở hữu của tin đăng hoặc admin mới có quyền XÓA.
            allow delete: if isAuthenticated() && (request.auth.uid == resource.data.sellerId || isAdmin());

            // Xóa bỏ quy tắc "allow write" cũ để tránh xung đột.
        }

        // --- Trò chuyện (chats) & Tin nhắn (messages) ---
        match /chats/{chatId} {
            function isChatMember() {
                // Đối với document đã tồn tại
                return request.auth.uid in resource.data.members;
            }

            function isCreatingChatMember() {
                // Đối với document sắp được tạo
                return request.auth.uid in request.resource.data.members;
            }

            allow read, update, delete: if isAuthenticated() && isChatMember();

            // CHO PHÉP TẠO MỚI nếu người dùng là thành viên của cuộc trò chuyện sắp tạo
            allow create: if isAuthenticated() && isCreatingChatMember();


            match /messages/{messageId} {
                allow create: if isChatMember() && isOwner(request.resource.data.senderId);
                allow read: if isChatMember();
                allow update, delete: if false;
            }
        }

        // --- Đề nghị (offers) ---
        match /offers/{offerId} {
            allow read: if isAuthenticated() && (request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.sellerId);
            // SỬA LỖI BẢO MẬT: Đảm bảo người tạo đề nghị là chính họ.
            allow create: if isAuthenticated() && isOwner(request.resource.data.buyerId);
            allow update: if isAuthenticated() && (isOwner(resource.data.sellerId) || isOwner(resource.data.buyerId));
            allow delete: if false;
        }

        // --- Thông báo (notifications) ---
        match /notifications/{notificationId} {
            allow read, update, delete: if isOwner(resource.data.userId);
            allow create: if false; // Chỉ cho phép tạo từ Cloud Functions.
        }

        // --- Giao dịch (transactions) ---
        match /transactions/{transactionId} {
            allow read: if isAuthenticated() && (request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.sellerId);
            allow write: if false; // Chỉ cho phép tạo từ Cloud Functions.
        }

        // --- Báo cáo (reports) ---
        match /reports/{reportId} {
            // SỬA LỖI BẢO MẬT: Đảm bảo người báo cáo (reporterId) là chính họ.
            allow create: if isAuthenticated() && request.auth.uid == request.resource.data.reporterId;
            allow read, update, delete: if isAdmin();
        }

        // --- Người dùng bị chặn (blocked_users) ---
        match /blocked_users/{blockId} {
            allow create: if isAuthenticated() && isOwner(request.resource.data.blockerId);
            allow read, delete: if isAuthenticated() && isOwner(resource.data.blockerId);
            allow update: if false;
        }

        // --- Ký quỹ (Escrows) ---
        match /escrows/{escrowId} {
            allow read: if isAdmin() || (isAuthenticated() && (request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.sellerId));
            allow write: if false; // Chỉ cho phép tạo từ Cloud Functions.
        }
    }
}